// Code generated by goctl. DO NOT EDIT.
// Source: app.proto

package app

import (
	"context"

	"app/rpc/appserver"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	StuListReq  = appserver.StuListReq
	StuListResp = appserver.StuListResp
	Student     = appserver.Student

	App interface {
		ListStu(ctx context.Context, in *StuListReq, opts ...grpc.CallOption) (*StuListResp, error)
	}

	defaultApp struct {
		cli zrpc.Client
	}
)

func NewApp(cli zrpc.Client) App {
	return &defaultApp{
		cli: cli,
	}
}

func (m *defaultApp) ListStu(ctx context.Context, in *StuListReq, opts ...grpc.CallOption) (*StuListResp, error) {
	client := appserver.NewAppClient(m.cli.Conn())
	return client.ListStu(ctx, in, opts...)
}
